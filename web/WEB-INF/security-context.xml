<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:tx="http://www.springframework.org/schema/tx"
             xsi:schemaLocation="http://www.springframework.org/schema/beans 
                    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                    http://www.springframework.org/schema/security 
                    http://www.springframework.org/schema/security/spring-security-3.2.xsd
                    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">
    
    <!-- We will be defining all security related configurations in this file -->
    
  
    
    <http pattern="/jsp/authentification.jsp" security="none"/>
    <http pattern="/index.html" security="none"/>
    <http pattern="/redirect.jsp" security="none"/>
    <http pattern="/style.css" security="none"/>
    <http pattern="/images/*" security="none"/>
    <http pattern="/js/*" security="none"/>
    
 
    
    <http auto-config="true" use-expressions="true">
        <!-- this means all URL in this app will be checked if user is authenticated -->
        <intercept-url pattern="/admin/*" access="hasRole('ADMIN')"/> 
        <intercept-url pattern="/user/*" access="hasRole('USER')" /> 
        <intercept-url pattern="/content.html" access="isAuthenticated()"/> 
        <form-login login-page="/login.html" default-target-url="/content.html" 
                    authentication-failure-url="/login.html"/>
        <!-- the logout url we will use in JSP -->
        <logout logout-url="/logout" logout-success-url="/index.html"/> 
        <access-denied-handler ref="accessDeniedHandler"/>
    </http>
      
    <beans:bean id="accessDeniedHandler" 
                   class="BusinessLayer.service.MyAccessDeniedHandler">
        <beans:property name="accessDeniedUrl" value="../accessdenied.html" />
    </beans:bean>

   
    <beans:bean id="authenticationManager" 
                class="org.springframework.security.authentication.ProviderManager">
        <beans:property name="providers">
            <beans:list>
                <beans:ref local="daoAuthenticationProvider"/>
            </beans:list>
        </beans:property>
    </beans:bean>
	
  
   
    <beans:bean id="daoAuthenticationProvider" 
                class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <beans:property name="userDetailsService" ref="userDetailsService" ></beans:property>
    </beans:bean>
	
	
    <authentication-manager>
        <authentication-provider user-service-ref="userDetailsService">
        </authentication-provider>
    </authentication-manager>
        
    <beans:bean id="userDetailsService" class="BusinessLayer.service.UserDetailsService">
        <beans:property name="userDAO" ref="userDAO" ></beans:property>
	    
    </beans:bean>
        
    <beans:bean id="userDAO" class="DataBaseAcessLayer.UserDAOImpl">
        <beans:property name="sessionFactory" ref="sessionFactory" />
    </beans:bean>
        
        
    <beans:bean id="sessionFactory"
                      class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <beans:property name="configLocation">
            <beans:value>classpath:hibernateconfig/hibernate.cfg.xml</beans:value>
        </beans:property>
    </beans:bean>
        
    <beans:bean id="transactionManager"
                    class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <beans:property name="sessionFactory" ref="sessionFactory" />
    </beans:bean>

    <tx:annotation-driven transaction-manager="transactionManager" />
     

</beans:beans>